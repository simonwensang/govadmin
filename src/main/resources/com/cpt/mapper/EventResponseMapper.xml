<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cpt.mapper.EventResponseMapper">
  <resultMap id="BaseResultMap" type="com.cpt.model.EventResponse">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="event_id" jdbcType="INTEGER" property="eventId" />
    <result column="resp_department" jdbcType="VARCHAR" property="respDepartment" />
    <result column="resp_department_id" jdbcType="BIGINT" property="respDepartmentId" />
    <result column="responsible" jdbcType="VARCHAR" property="responsible" />
    <result column="responsible_id" jdbcType="BIGINT" property="responsibleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, event_id, resp_department, resp_department_id, responsible, responsible_id, create_time, 
    status
  </sql>
  <select id="selectByExample" parameterType="com.cpt.model.EventResponseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_event_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_event_response
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_event_response
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cpt.model.EventResponseExample">
    delete from t_event_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cpt.model.EventResponse">
    insert into t_event_response (id, event_id, resp_department, 
      resp_department_id, responsible, responsible_id, 
      create_time, status)
    values (#{id,jdbcType=BIGINT}, #{eventId,jdbcType=INTEGER}, #{respDepartment,jdbcType=VARCHAR}, 
      #{respDepartmentId,jdbcType=BIGINT}, #{responsible,jdbcType=VARCHAR}, #{responsibleId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cpt.model.EventResponse">
    insert into t_event_response
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eventId != null">
        event_id,
      </if>
      <if test="respDepartment != null">
        resp_department,
      </if>
      <if test="respDepartmentId != null">
        resp_department_id,
      </if>
      <if test="responsible != null">
        responsible,
      </if>
      <if test="responsibleId != null">
        responsible_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=INTEGER},
      </if>
      <if test="respDepartment != null">
        #{respDepartment,jdbcType=VARCHAR},
      </if>
      <if test="respDepartmentId != null">
        #{respDepartmentId,jdbcType=BIGINT},
      </if>
      <if test="responsible != null">
        #{responsible,jdbcType=VARCHAR},
      </if>
      <if test="responsibleId != null">
        #{responsibleId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cpt.model.EventResponseExample" resultType="java.lang.Integer">
    select count(*) from t_event_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_event_response
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=INTEGER},
      </if>
      <if test="record.respDepartment != null">
        resp_department = #{record.respDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.respDepartmentId != null">
        resp_department_id = #{record.respDepartmentId,jdbcType=BIGINT},
      </if>
      <if test="record.responsible != null">
        responsible = #{record.responsible,jdbcType=VARCHAR},
      </if>
      <if test="record.responsibleId != null">
        responsible_id = #{record.responsibleId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_event_response
    set id = #{record.id,jdbcType=BIGINT},
      event_id = #{record.eventId,jdbcType=INTEGER},
      resp_department = #{record.respDepartment,jdbcType=VARCHAR},
      resp_department_id = #{record.respDepartmentId,jdbcType=BIGINT},
      responsible = #{record.responsible,jdbcType=VARCHAR},
      responsible_id = #{record.responsibleId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cpt.model.EventResponse">
    update t_event_response
    <set>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=INTEGER},
      </if>
      <if test="respDepartment != null">
        resp_department = #{respDepartment,jdbcType=VARCHAR},
      </if>
      <if test="respDepartmentId != null">
        resp_department_id = #{respDepartmentId,jdbcType=BIGINT},
      </if>
      <if test="responsible != null">
        responsible = #{responsible,jdbcType=VARCHAR},
      </if>
      <if test="responsibleId != null">
        responsible_id = #{responsibleId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cpt.model.EventResponse">
    update t_event_response
    set event_id = #{eventId,jdbcType=INTEGER},
      resp_department = #{respDepartment,jdbcType=VARCHAR},
      resp_department_id = #{respDepartmentId,jdbcType=BIGINT},
      responsible = #{responsible,jdbcType=VARCHAR},
      responsible_id = #{responsibleId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>